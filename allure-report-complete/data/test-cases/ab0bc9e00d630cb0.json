{"uid":"ab0bc9e00d630cb0","name":"test_otp_expiration_and_resend_functionality","fullName":"tests.test_otp.TestOTP#test_otp_expiration_and_resend_functionality","historyId":"3c6e69a479dfe8242c143c2054689ea4","time":{"start":1756355675224,"stop":1756355830496,"duration":155272},"description":"Test OTP expiration (2 min wait), resend button functionality, and valid OTP entry","descriptionHtml":"<p>Test OTP expiration (2 min wait), resend button functionality, and valid OTP entry</p>\n","status":"failed","statusMessage":"AssertionError: Resend OTP button should be clickable after expiration\nassert False","statusTrace":"self = <tests.test_otp.TestOTP object at 0x11191bfa0>\n\n    def test_otp_expiration_and_resend_functionality(self):\n        \"\"\"Test OTP expiration (2 min wait), resend button functionality, and valid OTP entry\"\"\"\n        self.logger.info(\"==================================================\")\n        self.logger.info(\"STARTING TEST: test_otp_expiration_and_resend_functionality\")\n        self.logger.info(\"==================================================\")\n        self.logger.info(\"STEP: Starting OTP expiration and resend functionality test\")\n    \n        try:\n            # First login to reach OTP page\n            assert self.perform_login_to_otp(), \"Failed to reach OTP page\"\n    \n            self.logger.info(\"STEP: Successfully reached OTP verification page\")\n    \n            # Take initial screenshot\n            self.take_failure_screenshot(\"otp_expiration_test_start\")\n    \n            # Wait for OTP to expire (2 minutes)\n            self.logger.info(\"STEP: Waiting 2 minutes for OTP to expire...\")\n            expiration_success = self.otp_page.wait_for_otp_expiration(wait_minutes=2)\n            assert expiration_success, \"Failed to complete OTP expiration wait\"\n    \n            self.logger.info(\"STEP: OTP expiration wait completed\")\n    \n            # Check if resend button is clickable\n            self.logger.info(\"STEP: Checking if resend OTP button is clickable after expiration\")\n            resend_clickable = self.otp_page.is_resend_button_clickable()\n    \n            # Take screenshot after expiration\n            self.take_failure_screenshot(\"otp_after_expiration\")\n    \n>           assert resend_clickable, \"Resend OTP button should be clickable after expiration\"\nE           AssertionError: Resend OTP button should be clickable after expiration\nE           assert False\n\ntests/test_otp.py:480: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1756354967069,"stop":1756354967155,"duration":86},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_xunit_setup_class_fixture_TestOTP","time":{"start":1756355339253,"stop":1756355339254,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_xunit_setup_method_fixture_TestOTP","time":{"start":1756355673429,"stop":1756355675223,"duration":1794},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Test OTP expiration (2 min wait), resend button functionality, and valid OTP entry","status":"failed","statusMessage":"AssertionError: Resend OTP button should be clickable after expiration\nassert False","statusTrace":"self = <tests.test_otp.TestOTP object at 0x11191bfa0>\n\n    def test_otp_expiration_and_resend_functionality(self):\n        \"\"\"Test OTP expiration (2 min wait), resend button functionality, and valid OTP entry\"\"\"\n        self.logger.info(\"==================================================\")\n        self.logger.info(\"STARTING TEST: test_otp_expiration_and_resend_functionality\")\n        self.logger.info(\"==================================================\")\n        self.logger.info(\"STEP: Starting OTP expiration and resend functionality test\")\n    \n        try:\n            # First login to reach OTP page\n            assert self.perform_login_to_otp(), \"Failed to reach OTP page\"\n    \n            self.logger.info(\"STEP: Successfully reached OTP verification page\")\n    \n            # Take initial screenshot\n            self.take_failure_screenshot(\"otp_expiration_test_start\")\n    \n            # Wait for OTP to expire (2 minutes)\n            self.logger.info(\"STEP: Waiting 2 minutes for OTP to expire...\")\n            expiration_success = self.otp_page.wait_for_otp_expiration(wait_minutes=2)\n            assert expiration_success, \"Failed to complete OTP expiration wait\"\n    \n            self.logger.info(\"STEP: OTP expiration wait completed\")\n    \n            # Check if resend button is clickable\n            self.logger.info(\"STEP: Checking if resend OTP button is clickable after expiration\")\n            resend_clickable = self.otp_page.is_resend_button_clickable()\n    \n            # Take screenshot after expiration\n            self.take_failure_screenshot(\"otp_after_expiration\")\n    \n>           assert resend_clickable, \"Resend OTP button should be clickable after expiration\"\nE           AssertionError: Resend OTP button should be clickable after expiration\nE           assert False\n\ntests/test_otp.py:480: AssertionError","steps":[],"attachments":[{"uid":"2ccbdff47bcf103e","name":"log","source":"2ccbdff47bcf103e.txt","type":"text/plain","size":1663},{"uid":"4089471283262acb","name":"stdout","source":"4089471283262acb.txt","type":"text/plain","size":1607},{"uid":"b556d69ebd389da9","name":"stderr","source":"b556d69ebd389da9.txt","type":"text/plain","size":1661}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_xunit_setup_method_fixture_TestOTP::0","time":{"start":1756355830659,"stop":1756355830836,"duration":177},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_xunit_setup_class_fixture_TestOTP::0","time":{"start":1756355830837,"stop":1756355830837,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"UI Automation Test Suite"},{"name":"story","value":"OTP Page Functionality and Verification Flow"},{"name":"feature","value":"OTP Verification"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_otp"},{"name":"subSuite","value":"TestOTP"},{"name":"host","value":"SHTLPMac015s-MacBook-Pro.local"},{"name":"thread","value":"42716-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_otp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"ab0bc9e00d630cb0.json","parameterValues":[]}